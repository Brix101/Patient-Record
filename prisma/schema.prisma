// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"

    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider = "mysql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.text annotations in model Account below
    // Further reading: 
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")

    referentialIntegrity = "prisma"
}

model Example {
    id Int @id @default(autoincrement())
}

model User {
    id       Int       @id @default(autoincrement())
    name     String?
    email    String?   @unique
    role     Role      @default(NURSE)
    image    String?
    Otp      Otp[]
    Account  Account[]
    Session  Session[]
    createAt DateTime  @default(now())
    updateAt DateTime  @updatedAt
}

// Necessary for Next auth
model Account {
    id                Int     @id @default(autoincrement())
    userId            Int
    type              String
    provider          String
    providerAccountId Int
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           Int      @id @default(autoincrement())
    sessionToken String   @unique
    expires      DateTime
    userId       Int
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Otp {
    id              Int      @id @default(autoincrement())
    otp             String
    expiration_time DateTime
    verified        Boolean  @default(false)
    userId          Int
    user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createAt        DateTime @default(now())
    updateAt        DateTime @updatedAt
}

enum Role {
    ADMIN
    NURSE
    PHYSICIAN
    PHARMACIST
}
