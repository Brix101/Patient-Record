generator client {
    provider = "prisma-client-js"

    previewFeatures = ["referentialIntegrity", "fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")

    referentialIntegrity = "prisma"
}

model Example {
    id Int @id @default(autoincrement())
}

model User {
    id        Int         @id @default(autoincrement())
    firstName String?
    lastName  String?
    email     String?     @unique
    role      Role        @default(ADMIN)
    image     String?
    gender    String?
    birthday  DateTime?
    address   String?
    mobile    String?
    disabled  Boolean     @default(false)
    createAt  DateTime    @default(now())
    updateAt  DateTime    @updatedAt
    Otp       Otp[]
    Physician Physician[]
    Patient   Patient[]
}

model Physician {
    id            Int     @id @default(autoincrement())
    expertes      String?
    licenseNUmber String?
    userId        Int
    user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Room {
    id      Int     @id @default(autoincrement())
    code    String?
    type    String?
    station String?
    status  String?
    floor   String?
    price   String?
}

model Otp {
    id              Int      @id @default(autoincrement())
    otp             String
    expiration_time DateTime
    verified        Boolean  @default(false)
    userId          Int
    user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createAt        DateTime @default(now())
    updateAt        DateTime @updatedAt
}

model Patient {
    id             Int      @id @default(autoincrement())
    name           String?
    gender         String?
    birthday       DateTime
    address        String?
    mobile         String?
    civilStatus    String?
    nationality    String?
    religion       String?
    weight         String?
    height         String?
    bloodPressure  String?
    chiefComplaint String?
    createAt       DateTime @default(now())
    updateAt       DateTime @updatedAt

    attendingPhysician String?
    attendingNurse     String?
    attendingGuardian  String?

    addedBy Int
    user    User @relation(fields: [addedBy], references: [id])
}

enum Role {
    ADMIN
    NURSE
    PHYSICIAN
    PHARMACIST
}
