tags:
  - name: users
    description: users API

paths:
  # [GET] users
  /api/users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] users
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/add-users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /api/users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/update-user'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  add-users:
    type: object
    required:
      - firstName
      - lastName
      - email
      - gender
      - birthday
      - address
      - contactNumber
    properties:
      firstName:
        type: string
        description: user FirstName
      lastName:
        type: string
        description: user LastName
      email:
        type: string
        description: user Email
      gender:
        type: enum
        description: user Gender["Male","Female"]
      birthday:
        type: string
        description: user Birthday
      address:
        type: string
        description: user Address
      contactNumber:
        type: string
        description: user Contact Number

  update-user:
    type: object
    required:
      - firstName
      - lastName
      - email
      - gender
      - birthday
      - address
      - contactNumber
    properties:
      firstName:
        type: string
        description: user FirstName
      lastName:
        type: string
        description: user LastName
      email:
        type: string
        description: user Email
      gender:
        type: enum
        description: user Gender["Male","Female"]
      birthday:
        type: string
        description: user Birthday
      address:
        type: string
        description: user Address
      contactNumber:
        type: string
        description: user Contact Number
      password:
        type: string
        description: user Password

schemes:
  - https
  - http
